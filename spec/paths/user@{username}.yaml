# parameters list that are used with each operation for this path
parameters:
  - name: pretty_print
    in: query # place where paramter is passed: path, header, query or body, formData
    description: Pretty print response
    # type of the paramter: string, number, integer, boolean, array
    type: boolean
get:
  tags:
    - User

  # summary is up to 120 symbold but we recommend to be shortest as possible
  summary: Get user by user name

  # you can use GFM in operation description too: https://guides.github.com/features/mastering-markdown
  description: |
    Some description of the operation.
    You can use `markdown` here.

  # operationId should be unique across the whole specification
  operationId: getUserByName

  # list of parameters for the operation
  parameters:
    - name: username
      in: path
      description: 'The name that needs to be fetched'
      required: true
      type: string
    - name: with_email
      in: query
      description: Filter users without email
      type: boolean

  # security schemas applied to this operation
  security:
    - main_auth:
      - 'read:users' # for auth2 provide list of scopes here
    - api_key: []
  # overwriting default global produces
  produces:
    - application/json
  responses: # list of responses
    '200':
      description: Success
      schema: # response schema can be specified for each response
        $ref: '#/definitions/User'
      examples:
      # repsonse samples for each type operation produces
        application/json:
          username: user1
          email: user@example.com
    '403':
      description: Forbidden
    '404':
      description: User not found
# documentation for PUT operation for this path
put:
  tags:
    - User
  summary: Updated user
  description: This can only be done by the logged in user.
  operationId: updateUser
  produces:
    - application/json
  parameters:
    - name: username
      in: path
      description: The name that needs to be updated
      required: true
      type: string
    - in: body
      name: body
      description: Updated user object
      required: true
      # for body parameter you should specify request schema instead of type
      schema:
        $ref: '#/definitions/User'
  security:
    - main_auth:
      - 'write:users'
  responses:
    '200':
      description: OK
    '400':
      description: Invalid user supplied
    '404':
      description: User not found
